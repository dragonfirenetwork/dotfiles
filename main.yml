---
# .dotfiles/main.yml

- name: Dotfiles Configuration
  hosts: localhost
  connection: local
  gather_facts: true

  vars_files:
    - group_vars/all.yml

  pre_tasks:
    - name: Pre-tasks | Internet Connection Check
      include_tasks: pre_tasks/check_connection.yml
      tags:
        - always
    
    - name: Pre-tasks | MacOS specific
      include_tasks: pre_tasks/macos.yml
      when: ansible_system == "Darwin"
      tags:
        - pre_tasks
    
    - name: Pre-tasks | Linux specific
      include_tasks: pre_tasks/linux.yml
      when: ansible_system == "Linux"
      tags:
        - pre_tasks

  # Software to install, uncomment any you wish to skip
  roles:
    - system
    - zsh
    - ssh
    - git
    - alacritty
    - asciiquarium
    - bat
  #  - tmux
  #  - terraform
  #  - opentofu
  #  - ansible
  #  - docker
  #  - python
  #  - go
  #  - php
  #  - packer
  #  - audacity
  #  - autofs
  #  - betterbird
  #  - chromium
  #  - discord
  #  - foliate
  #  - fusion360
  #  - gimp
  #  - libreoffice
  #  - lutris
  #  - raycast
  #  - rectangle
  #  - revolt
  #  - rhythmbox
  #  - signal
  #  - steam
  #  - syncthing
  #  - thunderbird
  #  - super-productivity
  #  - ulauncher
  #  - vagrant
  #  - vaultwarden
  #  - vivaldi
  #  - pwsh
  #  - vagrant
  #  - vlc
    - starship

  tasks:

    # Wrap up the run
    - name: Finalizing | Dotfiles
      block:
        # Source, just in case of changes 
        - name: Finalizing | Setting source
          shell: source ~/.zshrc
          args:
            executable: /bin/zsh
          when: ansible_os_family in ["Darwin", "Debian", "Ubuntu", "Pop!_OS", "LinuxMint", "Kali", "Parrot"]

        # Cleanup brew just in case
        - name: Finalizing | Wrap up Homebrew
          block:
            - name: Finalizing | Update brew cache
              homebrew:
                update_homebrew: true
                upgrade_all: true
            - name: Cleanup brew
              shell: brew cleanup
          when: ansible_system == "Darwin"
          tags: 
            - always
          
        # Cleanup Apt just in case
        - name: Finalizing | Wrap up Apt
          block:
            - name: Finalizing | Update cache
              apt:
                update_cache: true
            - name: Finalizing | Cleanup apt
              apt:
                autoclean: true
          when: ansible_os_family in ["Debian", "Ubuntu", "Pop!_OS", "LinuxMint", "Kali", "Parrot"]
          tags: 
            - always
      
          # Change the first_play variable to false 
        - name: Finalizing | Set first_play variable to false
          lineinfile:
            path: "{{ playbook_dir }}/group_vars/all.yml"
            regexp: '^first_play:'
            line: "first_play: false"
          when: first_play == true

        - name: Finalizing | Update user
          debug:
            msg: "Updated the first_play variable to false for future runs."
          when: first_play == true
      tags:
        - always