---
# pre_tasks/debian.yml

- name: System Setup | Repositories | add ignored packages for archlinux hosts
  lineinfile:
      dest: /etc/pacman.conf
      regexp: "^#?IgnorePkg"
      line: "IgnorePkg   = ansible linux linux-headers linux-lts linux-lts-headers"
  when: ansible_distribution == "Archlinux"
  tags:
    - pre_tasks

- name: System Setup | Repositories | add sources.list for debian hosts
  copy:
    src: distribution_packages/debian_sources.list
    dest: /etc/apt/sources.list
    backup: yes
  notify: apt_update
  when: ansible_distribution == "Debian"
  tags:
    - pre_tasks

- name: System Setup | Repositories | add debian-backports
  apt_repository:
    repo: deb http://deb.debian.org/debian buster-backports main
    filename: debian-backports
  notify: apt_update
  when: ansible_distribution == "Debian"
  tags:
    - pre_tasks

- name: System Setup | Install package management tools (debian-based)
  package:
    name:
      - aptitude
      - software-properties-common
    state: latest
  when: ansible_distribution in ["Debian", "Pop!_OS", "Ubuntu"]
  tags:
    - pre_tasks

- name: System Setup | Update APT package index
  apt:
    update_cache: yes
  tags:
    - pre_tasks

- name: System Setup | Upgrade all installed packages to the latest version
  apt:
    upgrade: dist
  tags:
    - pre_tasks

# Enable passwordless sudo for user
- name: System Setup | Enable passwordless sudo for user
  ansible.builtin.template:
    src: "user-sudo.j2"
    dest: /private/etc/sudoers.d/{{ ansible_env['USER'] }}
    mode: "0440"
  tags:
    - pre_tasks

- name: System Setup | Install essential packages
  apt:
    name:
      - build-essential
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      - sudo
      - wget
      - git
      - zsh
      - sshfs
      - net-tools
      - nmap
      - htop
      - btop
      - unzip
      - traceroute
      - dnsutils
      - iftop
      - cron
      - logrotate
      - netstat
      - zoxide
      - rsync
      - locales
      - language-pack-en
      - language-pack-jp
      - rar
      - unrar
      - xz-utils
      - ffmpeg
      - qemu-kvm
      - vagrant
    state: present
  tags:
    - pre_tasks

# Check if .config exists, if not create it
- name: System Setup | Ensure .config directory exists
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory
    mode: '0755'
  tags:
    - pre_taskss

- name: ZSH
  block:
    - name: Check if .zshrc exists
      stat:
        path: "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc_exists
    
    - name: Create .zshrc
      copy:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        content: |
          export PATH="/usr/local/bin:$PATH"
          alias ll="ls -la"
        mode: '0644'
      when: not zshrc_exists.stat.exists

  tags:
    - pre_tasks
    - zsh