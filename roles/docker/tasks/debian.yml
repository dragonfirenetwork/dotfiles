---
# These steps are based on the official Docker documentation: https://docs.docker.com/engine/install/ubuntu/#installation-methods

- name: "Docker | Update APT cache"
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: "Docker | Install dependencies"
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present
  become: true

# New Task: Remove old Docker GPG keys from legacy keyrings
- name: "Docker | Remove old Docker GPG keys from trusted.gpg"
  ansible.builtin.shell: |
    apt-key list | grep -B 1 "Docker" | grep pub | awk '{print $2}' | tr -d / | xargs -r apt-key del
  become: true
  ignore_errors: true
  changed_when: false

- name: "Docker | Remove Docker GPG key files from /etc/apt/trusted.gpg.d/"
  ansible.builtin.file:
    path: "/etc/apt/trusted.gpg.d/docker.gpg"
    state: absent
  become: true

# Ensure keyrings directory exists
- name: "Docker | Ensure keyrings directory exists"
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"
    owner: root
    group: root
  become: true

# Add Docker’s official GPG key using get_url
- name: "Docker | Add Docker’s official GPG key"
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.gpg
    mode: "0644"
    owner: root
    group: root
    validate_certs: yes
  become: true

# Ensure the keyring file is owned by root and has correct permissions
- name: "Docker | Ensure docker.gpg has correct permissions"
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    mode: "0644"
    owner: root
    group: root
  become: true

- name: "Docker | Get System Architecture"
  ansible.builtin.command: "dpkg --print-architecture"
  register: dpkg_architecture
  changed_when: false
  failed_when: false
  check_mode: false

- name: "Docker | Add Docker’s stable repository"
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu
      {{ ansible_distribution_release }}
      stable
    filename: docker
    mode: "0644"
    update_cache: true
  become: true

# Optional: Remove other legacy keys (e.g., Asciiquarium PPA)
- name: "Docker | Remove Asciiquarium PPA GPG key from trusted.gpg"
  ansible.builtin.shell: |
    apt-key list | grep -B 1 "ytvwld/asciiquarium" | grep pub | awk '{print $2}' | tr -d / | xargs -r apt-key del
  become: true
  ignore_errors: true
  changed_when: false

- name: "Docker | Move Asciiquarium PPA GPG key to keyrings"
  ansible.builtin.command: >
    gpg --dearmor -o /etc/apt/keyrings/asciiquarium.gpg /usr/share/keyrings/asciiquarium-archive-keyring.gpg
  args:
    creates: /etc/apt/keyrings/asciiquarium.gpg
  become: true
  when: ansible_facts.packages['gnupg'] is defined

- name: "Docker | Update Asciiquarium PPA repository to use new keyring"
  ansible.builtin.apt_repository:
    repo: "ppa:ytvwld/asciiquarium"
    filename: asciiquarium
    state: present
    codename: "{{ ansible_distribution_release }}"
    signed_by: /etc/apt/keyrings/asciiquarium.gpg
  become: true
  when: ansible_facts.packages['gnupg'] is defined

- name: "Docker | Install Docker Engine"
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true
  become: true

- name: "Docker | Enable service"
  ansible.builtin.systemd:
    enabled: true
    name: docker
    state: started
  become: true
  when: not ansible_host_environment_is_wsl

- name: "Docker | Add to group"
  ansible.builtin.user:
    append: true
    groups: docker
    name: "{{ ansible_env['USER'] }}"
  become: true

- name: "Docker | Ensure docker data directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.local/lib/docker"
    state: directory
    mode: "0710"
  become: true

- name: "Docker | Copy daemon.json"
  ansible.builtin.template:
    dest: "/etc/docker/daemon.json"
    src: "daemon.json"
    mode: "0644"
  become: true
  notify: restart_docker